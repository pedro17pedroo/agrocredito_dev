import type { InsertCreditProgram } from '@shared/schema';
import { creditPrograms, users } from '@shared/schema';
import { eq } from 'drizzle-orm';
import { db } from '../server/db';

export async function seedCreditPrograms() {
  try {
    console.log('üí≥ Criando programas de cr√©dito de exemplo...');

    // Buscar a institui√ß√£o financeira de teste
    const [financialInstitution] = await db
      .select()
      .from(users)
      .where(eq(users.phone, '+244934567890'))
      .limit(1);

    if (!financialInstitution) {
      console.log(
        '‚ùå Institui√ß√£o financeira n√£o encontrada. Execute primeiro o seed principal.'
      );
      return;
    }

    // Lista de programas de cr√©dito de exemplo
    const samplePrograms: InsertCreditProgram[] = [
      {
        financialInstitutionId: financialInstitution.id,
        name: 'AgriCredi Milho Plus',
        description:
          'Programa especial para produtores de milho com condi√ß√µes diferenciadas. Taxa reduzida e prazo estendido para planta√ß√µes de grande escala.',
        projectTypes: JSON.stringify(['corn']),
        minAmount: '200000.00', // 200.000 AOA
        maxAmount: '5000000.00', // 5.000.000 AOA
        minTerm: 6,
        maxTerm: 24,
        interestRate: '12.50', // 12,5% ao ano
        effortRate: '35.00', // Taxa de esfor√ßo m√°xima 35%
        processingFee: '2.50', // Taxa de processamento 2,5%
        isActive: true,
        requirements: JSON.stringify([
          'Experi√™ncia m√≠nima de 2 anos na cultura',
          'Terreno pr√≥prio ou contrato de arrendamento',
          'Plano de cultivo detalhado',
          'Comprovativo de rendimentos',
        ]),
        benefits: JSON.stringify([
          'Taxa de juro preferencial',
          'Car√™ncia de 6 meses para in√≠cio dos pagamentos',
          'Assist√™ncia t√©cnica inclu√≠da',
          'Seguro agr√≠cola opcional',
        ]),
      },
      {
        financialInstitutionId: financialInstitution.id,
        name: 'Pecu√°ria Sustent√°vel',
        description:
          'Financiamento para projetos de pecu√°ria bovina e caprina com foco na sustentabilidade e moderniza√ß√£o das pr√°ticas de cria√ß√£o.',
        projectTypes: JSON.stringify(['cattle']),
        minAmount: '1000000.00', // 1.000.000 AOA
        maxAmount: '10000000.00', // 10.000.000 AOA
        minTerm: 12,
        maxTerm: 36,
        interestRate: '15.00', // 15% ao ano
        effortRate: '40.00', // Taxa de esfor√ßo m√°xima 40%
        processingFee: '3.00', // Taxa de processamento 3%
        isActive: true,
        requirements: JSON.stringify([
          'Certificado de posse de terreno',
          'Experi√™ncia comprovada em pecu√°ria',
          'Estudo de viabilidade do projeto',
          'Garantias adequadas ao valor solicitado',
        ]),
        benefits: JSON.stringify([
          'Acompanhamento veterin√°rio',
          'Forma√ß√£o em t√©cnicas modernas',
          'Desconto na aquisi√ß√£o de ra√ß√µes',
          'Apoio na comercializa√ß√£o',
        ]),
      },
      {
        financialInstitutionId: financialInstitution.id,
        name: 'Jovem Agricultor',
        description:
          'Programa dedicado a jovens empreendedores agr√≠colas entre 18-35 anos. Condi√ß√µes especiais para incentivar a juventude no setor agr√≠cola.',
        projectTypes: JSON.stringify([
          'corn',
          'cassava',
          'horticulture',
          'poultry',
        ]),
        minAmount: '100000.00', // 100.000 AOA
        maxAmount: '2000000.00', // 2.000.000 AOA
        minTerm: 6,
        maxTerm: 18,
        interestRate: '10.00', // 10% ao ano
        effortRate: '30.00', // Taxa de esfor√ßo m√°xima 30% (condi√ß√µes preferenciais)
        processingFee: '1.50', // Taxa de processamento reduzida 1,5%
        isActive: true,
        requirements: JSON.stringify([
          'Idade entre 18 e 35 anos',
          'Forma√ß√£o ou experi√™ncia agr√≠cola',
          'Projeto inovador e sustent√°vel',
          'Resid√™ncia na zona rural',
        ]),
        benefits: JSON.stringify([
          'Taxa de juro reduzida',
          'Mentoria empresarial',
          'Acesso a tecnologias modernas',
          'Rede de contactos comerciais',
          'Forma√ß√£o em gest√£o agr√≠cola',
        ]),
      },
      {
        financialInstitutionId: financialInstitution.id,
        name: 'Horticultura Comercial',
        description:
          'Financiamento para projetos de horticultura com foco na produ√ß√£o comercial e abastecimento dos mercados urbanos.',
        projectTypes: JSON.stringify(['horticulture']),
        minAmount: '150000.00', // 150.000 AOA
        maxAmount: '3000000.00', // 3.000.000 AOA
        minTerm: 6,
        maxTerm: 15,
        interestRate: '13.50', // 13,5% ao ano
        effortRate: '35.00', // Taxa de esfor√ßo m√°xima 35%
        processingFee: '2.00', // Taxa de processamento 2%
        isActive: true,
        requirements: JSON.stringify([
          'Acesso garantido √† √°gua',
          'Proximidade de mercados',
          'Conhecimento em horticultura',
          'Capacidade de escoamento da produ√ß√£o',
        ]),
        benefits: JSON.stringify([
          'Sementes certificadas subsidiadas',
          'Sistema de irriga√ß√£o',
          'Apoio na comercializa√ß√£o',
          'Contratos de fornecimento',
        ]),
      },
      {
        financialInstitutionId: financialInstitution.id,
        name: 'Avicultura Moderna',
        description:
          'Programa para moderniza√ß√£o e expans√£o de projetos av√≠colas, incluindo galinhas poedeiras e frangos de carne.',
        projectTypes: JSON.stringify(['poultry']),
        minAmount: '300000.00', // 300.000 AOA
        maxAmount: '4000000.00', // 4.000.000 AOA
        minTerm: 9,
        maxTerm: 24,
        interestRate: '14.00', // 14% ao ano
        effortRate: '38.00', // Taxa de esfor√ßo m√°xima 38%
        processingFee: '2.50', // Taxa de processamento 2,5%
        isActive: false, // Programa temporariamente suspenso
        requirements: JSON.stringify([
          'Instala√ß√µes adequadas',
          'Conhecimento t√©cnico av√≠cola',
          'Plano sanit√°rio aprovado',
          'Mercado definido para escoamento',
        ]),
        benefits: JSON.stringify([
          'Aves de ra√ßa melhorada',
          'Ra√ß√£o balanceada',
          'Assist√™ncia veterin√°ria',
          'Equipamentos modernos',
        ]),
      },
    ];

    // Criar os programas de cr√©dito
    let createdCount = 0;
    for (const program of samplePrograms) {
      const [existing] = await db
        .select()
        .from(creditPrograms)
        .where(eq(creditPrograms.name, program.name))
        .limit(1);

      if (!existing) {
        await db.insert(creditPrograms).values(program);
        console.log(`  ‚úÖ Criado programa: ${program.name}`);
        createdCount++;
      } else {
        console.log(`  ‚è≠Ô∏è Programa j√° existe: ${program.name}`);
      }
    }

    if (createdCount > 0) {
      console.log(
        `üéâ ${createdCount} programas de cr√©dito criados com sucesso!`
      );
    } else {
      console.log('‚ÑπÔ∏è Todos os programas j√° existem na base de dados.');
    }
  } catch (error) {
    console.error('‚ùå Erro ao criar programas de cr√©dito:', error);
    throw error;
  }
}

// Run if called directly
if (import.meta.url === `file://${process.argv[1]}`) {
  seedCreditPrograms()
    .then(() => {
      console.log('Seed de programas de cr√©dito executado com sucesso!');
      process.exit(0);
    })
    .catch(error => {
      console.error('Erro no seed de programas de cr√©dito:', error);
      process.exit(1);
    });
}
