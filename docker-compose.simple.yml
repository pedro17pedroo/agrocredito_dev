# Docker Compose Simplificado para Desenvolvimento
# Use: docker-compose -f docker-compose.simple.yml up

services:
  # Base de Dados MySQL
  db:
    image: mysql:8.0
    container_name: agrocredito-db-simple
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=agrocredito
      - MYSQL_USER=agrocredito
      - MYSQL_PASSWORD=password123
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_simple_data:/var/lib/mysql
    networks:
      - agrocredito-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "agrocredito", "-ppassword123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Migração e Seeds
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: agrocredito-migrate
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://agrocredito:password123@db:3306/agrocredito
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - agrocredito-network
    command: sh -c "npm run db:push && npm run db:seed"
    restart: "no"

  # Aplicação AgroCrédito
  app:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: agrocredito-app-simple
    ports:
      - "5001:5000"
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://agrocredito:password123@db:3306/agrocredito
      - JWT_SECRET=dev-jwt-secret-key-muito-segura
      - PORT=5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # Mount do código para hot reload
      - .:/app
      - /app/node_modules
      # Mount dos uploads e logs
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - agrocredito-network
    command: npm run dev
    restart: unless-stopped

volumes:
  mysql_simple_data:
    driver: local

networks:
  agrocredito-network:
    driver: bridge