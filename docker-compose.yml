version: '3.8'

services:
  # Aplicação AgroCrédito
  app:
    build: .
    container_name: agrocredito-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://agrocredito:agrocredito_password@db:3306/agrocredito
      - JWT_SECRET=${JWT_SECRET:-sua-chave-secreta-muito-segura-para-producao}
      - PORT=5000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
      - ./logs:/app/logs
    networks:
      - agrocredito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de Dados MySQL
  db:
    image: mysql:8.0
    container_name: agrocredito-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password_segura}
      - MYSQL_DATABASE=agrocredito
      - MYSQL_USER=agrocredito
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-agrocredito_password}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - agrocredito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "agrocredito", "-p$$MYSQL_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Nginx como Proxy Reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: agrocredito-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - agrocredito-network
    restart: unless-stopped
    profiles:
      - production

  # Redis para Cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: agrocredito-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agrocredito-network
    restart: unless-stopped
    profiles:
      - cache
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}

# Volumes para persistência de dados
volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

# Rede personalizada
networks:
  agrocredito-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16